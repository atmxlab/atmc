// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/atmxlab/atmc/processor (interfaces: Linker)
//
// Generated by this command:
//
//	mockgen -destination=./mocks/Linker_mock.go -package=mocks . Linker
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	linker "github.com/atmxlab/atmc/linker"
	ast "github.com/atmxlab/atmc/linker/ast"
	gomock "go.uber.org/mock/gomock"
)

// MockLinker is a mock of Linker interface.
type MockLinker struct {
	ctrl     *gomock.Controller
	recorder *MockLinkerMockRecorder
}

// MockLinkerMockRecorder is the mock recorder for MockLinker.
type MockLinkerMockRecorder struct {
	mock *MockLinker
}

// NewMockLinker creates a new mock instance.
func NewMockLinker(ctrl *gomock.Controller) *MockLinker {
	mock := &MockLinker{ctrl: ctrl}
	mock.recorder = &MockLinkerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLinker) EXPECT() *MockLinkerMockRecorder {
	return m.recorder
}

// Link mocks base method.
func (m *MockLinker) Link(arg0 linker.LinkParam) (ast.Ast, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Link", arg0)
	ret0, _ := ret[0].(ast.Ast)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Link indicates an expected call of Link.
func (mr *MockLinkerMockRecorder) Link(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Link", reflect.TypeOf((*MockLinker)(nil).Link), arg0)
}
